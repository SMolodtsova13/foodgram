volumes:
  static:
  media_value:
  db_value:

services:

  db:
    image: postgres:13.0-alpine
    restart: always
    environment:
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=foodgram_password
      - POSTGRES_DB=postgres
    volumes:
      - db_value:/var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    # build:
    #   context: ../backend
    #   dockerfile: Dockerfile
    image: smolodtsova13/foodgram_backend:latest
    restart: always
    env_file:
      - ./.env
    command: gunicorn foodgram.wsgi:application --bind 0.0.0.0:8000
    depends_on:
      - db
    volumes:
      - static:/static
      - media_value:/media

  frontend:
    container_name: foodgram_frontend
    image: smolodtsova13/foodgram_frontend:latest
    depends_on:
      - backend
    volumes:
      - ../frontend/:/app/result_build/
    # command: cp -r /app/build/. /frontend_static/
    # build: ../frontend
    # volumes:
    #   - static:/frontend_static


  nginx:
    container_name: foodgram-proxy
    image: nginx:1.25.4-alpine
    restart: always
    depends_on:
      - backend
      - frontend
    ports:
      - "80:80"

    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static:/var/html/static/
      - media_value:/var/html/media/
   